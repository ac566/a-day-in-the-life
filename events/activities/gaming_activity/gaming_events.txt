namespace = gaming
#
# 0001-0999 - Invitations and Responses
#
## Invite guest to tournament
gaming.0001 = {
	type = letter_event
	opening = {
		desc = gaming.0001.opening
	}
	desc = gaming.0001.desc
	sender = scope:sender
	# Check if character is still valid
	trigger = {
		gaming_tournament_valid_player_trigger = yes
		NOT = {
			exists = var:is_handling_gaming_tournament_invitation
		}
	}
	# Try resending letter if it got lost
	on_trigger_fail = {
		if = {
			limit = {
				gaming_tournament_valid_player_trigger = yes
				exists = var:is_handling_gaming_tournament_invitation
			}
			trigger_event = {
				id = gaming.0001
				days = 1
			}
		}
	}
	#
	immediate = {
		scope:activity.activity_owner = {
			save_scope_as = sender
		}
		set_variable = {
			name = is_handling_gaming_tournament_invitation
			value = scope:sender
			days = 30
		}
	}
	# Options
	## Accept
	option = {
		name = gaming.0001.accept
		scope:activity = {
			accept_invitation_for_character = prev
		}
		set_variable = {
			name = booked_for_a_party
			value = scope:sender
			days = 30
		}
		gaming_guest_stress_loss_effect = yes
		# AI
		ai_chance = {
			base = 100
			opinion_modifier = {
				multiplier = 1
				opinion_target = scope:sender
			}
		}
	}
	## Decline
	option = {
		name = gaming.0001.decline
		scope:activity = {
			decline_invitation_for_character = prev
		}
		# AI
		ai_chance = {
			base = 10
			modifier = {
				add = 15
				scope:sender = {
					target_is_liege_or_above = scope:sender
				}
			}
			ai_value_modifier = {
				ai_boldness = 0.2
			}
		}
	}
	# After
	after = {
		remove_variable = is_handling_gaming_tournament_invitation
	}
}

#
# 1000 - 1999 - Startup
#
## Host startup
gaming.1000 = {
	type = character_event
	title = gaming.1000.t
	desc = gaming.1000.desc
	theme = martial
	right_portrait = {
		character = root
		animation = happiness
	}
	trigger = {
		this = scope:activity.activity_owner
	}
	# Give options to decide which game to play
	## Chess
	option = {
		name = gaming.1000.a
		# custom_tooltip = gaming.1000.a.tt
		trigger_event = gaming_chess.0002
		# AI
		ai_chance = {
			base = 0
			modifier = {
				add = {
					add = root.martial
					add = root.learning
					divide = 2
				}
			}
		}
	}
	## Go
	option = {
		name = gaming.1000.b
		# custom_tooltip = gaming.1000.b.tt
		trigger_event = gaming_go.0002
		# AI
		ai_chance = {
			base = 0
			modifier = {
				add = {
					add = root.learning
					multiply = 2
				}
			}
		}
	}
	## Wargame
	option = {
		name = gaming.1000.c
		# custom_tooltip = gaming.1000.c.tt
		trigger_event = gaming_wargame.0002
		# AI
		ai_chance = {
			base = 0
			modifier = {
				add = {
					add = root.martial
					multiply = 2
				}
			}
		}
	}
}

#
#
#
gaming.2000 = {
	type = character_event
	title = gaming.2000.t
	desc = gaming.2000.desc
	theme = martial
	right_portrait = {
		character = root
		animation = happiness
	}
	option = {
		name = gaming.2000.a
	}
}

#
# 8000 - 8999 - Round Events
#
gaming.8000 = {
	type = character_event
	hidden = yes
	trigger = {
		exists = scope:activity
	}
	immediate = {
		if = {
			limit = {
				scope:activity = {
					any_participant = {
						count = all
						trigger_if = {
							limit = {
								gaming_valid_participant_trigger = yes
							}
							save_temporary_scope_as = participant_check
							scope:activity = {
								is_target_in_variable_list = {
									name = finished_participants
									target = scope:participant_check
								}
							}
						}
						trigger_else = {
							always = yes
						}
					}
				}
			}
			gaming_end_round_effect = yes
		}
		else = {
			trigger_event = {
				id = gaming.8000
				days = 5
			}
		}
	}
}

gaming.8001 = {
	type = character_event
	hidden = yes
	trigger = {
		exists = scope:activity
	}
	immediate = {
		if = {
			limit = {
				any_in_list = {
					list = active_opponents
					count = 1
				}
			}
			gaming_end_tournament_effect = yes
		}
		else = {
			gaming_setup_effect = yes
		}
	}
}

#
# 9000 - 9999 - End Events
#
gaming.9000 = {
	type = character_event
	title = gaming.9000.t
	desc = gaming.9000.desc
	theme = martial
	option = {
		name = gaming.9000.a
	}
	immediate = {
		scope:activity = {
			every_participant = {
				limit = {
					gaming_valid_participant_trigger = yes
				}
				trigger_event = gaming.9001
			}
		}
	}
	after = {
		complete_activity = yes
	}
}

gaming.9001 = {
	type = character_event
	title = gaming.9001.t
	desc = gaming.9001.desc
	theme = martial
	trigger = {
		NOT = {
			this = scope:activity.activity_owner
		}
	}
	option = {
		name = gaming.9001.a
	}
}

# Activity no longer valid
gaming.9100 = {
	type = character_event
	title = gaming.9100.t
	desc = gaming.9100.desc
	theme = martial
	left_portrait = root
	option = {
		name = gaming.9100.a
		scope:activity = {
			complete_activity = yes
		}
	}
}
