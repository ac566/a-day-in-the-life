# Sets up list of players
gaming_initial_setup_effect = {
	scope:activity = {
		# Add loss counter to everyone
		every_participant = {
			limit = {
				gaming_valid_participant_trigger = yes
			}
			add_to_list = active_opponents
		}
	}
}

# Matches each character with an opponent, then fires start and (delayed) end events
gaming_setup_effect = {
	scope:activity = {
		every_in_list = {
			list = active_opponents
			remove_variable = current_advantage
			remove_variable = current_opponent
		}
		every_in_list = {
			list = active_opponents
			limit = {
				NOT = {
					has_variable = gaming_lost
				}
				gaming_valid_participant_trigger = yes
				gaming_has_opponent_trigger = no
			}
			save_temporary_scope_as = current_participant
			set_variable = {
				name = current_advantage
				value = 0
			}
			# Give every participant an opponent
			random_in_list = {
				list = active_opponents
				limit = {
					NOT = {
						has_variable = gaming_lost
					}
					gaming_valid_participant_trigger = yes
					gaming_has_opponent_trigger = no
					NOT = {
						this = scope:current_participant
					}
				}
				save_temporary_scope_as = random_participant
				set_variable = {
					name = current_opponent
					value = scope:current_participant
				}
				scope:current_participant = {
					set_variable = {
						name = current_opponent
						value = scope:random_participant
					}
				}
			}
		}
		every_participant = {
			limit = {
				gaming_valid_participant_trigger = yes
			}
			# Start event loop
			if = {
				limit = {
					local_var:gaming_type = gaming_type_chess
				}
				trigger_event = gaming_chess.0001
			}
			else_if = {
				limit = {
					local_var:gaming_type = gaming_type_go
				}
				trigger_event = gaming_go.0001
			}
			else_if = {
				limit = {
					local_var:gaming_type = gaming_type_wargame
				}
				trigger_event = gaming_wargame.0001
			}
		}
		activity_owner = {
			trigger_event = {
				id = gaming.8000
				days = max_gaming_duration
			}
		}
	}
}

# Starts event loops for chess
gaming_chess_setup_effect = {
	set_local_variable = {
		name = gaming_type
		value = gaming_type_chess
	}
	if = {
		limit = {
			gaming_has_opponent_trigger = yes
		}
		trigger_event = {
			on_action = gaming_chess_event_selection
			days = gaming_initial_event_delay
		}
	}
	else = {
		trigger_event = {
			on_action = gaming_chess_spectator_event_selection
			days = gaming_initial_event_delay
		}
	}
}

# Starts event loops for go
gaming_go_setup_effect = {
	set_local_variable = {
		name = gaming_type
		value = gaming_type_go
	}
	if = {
		limit = {
			gaming_has_opponent_trigger = yes
		}
		trigger_event = {
			on_action = gaming_go_event_selection
			days = gaming_initial_event_delay
		}
	}
	else = {
		trigger_event = {
			on_action = gaming_go_spectator_event_selection
			days = gaming_initial_event_delay
		}
	}
}

# Starts event loops for wargame
gaming_wargame_setup_effect = {
	set_local_variable = {
		name = gaming_type
		value = gaming_type_wargame
	}
	if = {
		limit = {
			gaming_has_opponent_trigger = yes
		}
		trigger_event = {
			on_action = gaming_wargame_event_selection
			days = gaming_initial_event_delay
		}
	}
	else = {
		trigger_event = {
			on_action = gaming_wargame_spectator_event_selection
			days = gaming_initial_event_delay
		}
	}
}
