# Tracks number of events a character has had, then fires more if under the limit
gaming_event_loop_effect = {
	if = {
		limit = {
			NOT = {
				exists = var:num_gaming_events
			}
		}
		set_variable = {
			name = num_gaming_events
			value = 0
		}
		gaming_fire_correct_or_default_event_effect = yes
	}
	else_if = {
		limit = {
			var:num_gaming_events < max_default_gaming_events
		}
		change_variable = {
			name = num_gaming_events
			add = 1
		}
		gaming_fire_correct_or_default_event_effect = yes
	}
	else = {
		gaming_events_end_effect = yes
	}
}

# Fires event depending on game type and whether the character is a player vs. spectator
gaming_fire_correct_or_default_event_effect = {
	if = {
		limit = {
			local_var:gaming_type = gaming_type_chess
		}
		if = {
			limit = {
				gaming_has_opponent_trigger = yes
			}
			trigger_event = {
				on_action = gaming_chess_event_selection
				days = {
					min_gaming_event_spacing
					max_gaming_event_spacing
				}
			}
		}
		else = {
			trigger_event = {
				on_action = gaming_chess_spectator_event_selection
				days = {
					min_gaming_event_spacing
					max_gaming_event_spacing
				}
			}
		}
	}
	else_if = {
		limit = {
			local_var:gaming_type = gaming_type_go
		}
		if = {
			limit = {
				gaming_has_opponent_trigger = yes
			}
			trigger_event = {
				on_action = gaming_go_event_selection
				days = {
					min_gaming_event_spacing
					max_gaming_event_spacing
				}
			}
		}
		else = {
			trigger_event = {
				on_action = gaming_go_spectator_event_selection
				days = {
					min_gaming_event_spacing
					max_gaming_event_spacing
				}
			}
		}
	}
	else_if = {
		limit = {
			local_var:gaming_type = gaming_type_wargame
		}
		if = {
			limit = {
				gaming_has_opponent_trigger = yes
			}
			trigger_event = {
				on_action = gaming_wargame_event_selection
				days = {
					min_gaming_event_spacing
					max_gaming_event_spacing
				}
			}
		}
		else = {
			trigger_event = {
				on_action = gaming_wargame_spectator_event_selection
				days = {
					min_gaming_event_spacing
					max_gaming_event_spacing
				}
			}
		}
	}
}

# Broadcast that this character is done with his events
gaming_events_end_effect = {
	remove_variable = num_gaming_events
	save_temporary_scope_as = finished_participant
	scope:activity = {
		add_to_variable_list = {
			name = finished_participants
			target = scope:finished_participant
		}
	}
}

# Triggers match result event for all players, then schedules the next round
gaming_end_round_effect = {
	scope:activity = {
		clear_variable_list = finished_participants
		set_variable = {
			name = attempted_to_end_round
			value = 0
		}
		every_participant = {
			limit = {
				gaming_valid_participant_trigger = yes
				gaming_has_opponent_trigger = yes
			}
			if = {
				limit = {
					local_var:gaming_type = gaming_type_chess
				}
				trigger_event = gaming_chess.8000
			}
			else_if = {
				limit = {
					local_var:gaming_type = gaming_type_go
				}
				trigger_event = gaming_go.8000
			}
			else_if = {
				limit = {
					local_var:gaming_type = gaming_type_wargame
				}
				trigger_event = gaming_wargame.8000
			}
		}
		activity_owner = {
			trigger_event = {
				id = gaming.8001
				days = 5
			}
		}
	}
}

# Triggers tournament result events, then schedules end of tournament event
gaming_end_tournament_effect = {
	scope:activity = {
		activity_owner = {
			trigger_event = {
				id = gaming.9000
				days = 3
			}
		}
		every_participant = {
			limit = {
				gaming_valid_participant_trigger = yes
			}
			# Winner
			if = {
				limit = {
					NOT = {
						has_variable = gaming_lost
					}
				}
				gamer_points_gain_effect = {
					CHANGE = 4
				}
				if = {
					limit = {
						local_var:gaming_type = gaming_type_chess
					}
					trigger_event = gaming_chess.8001
				}
				else_if = {
					limit = {
						local_var:gaming_type = gaming_type_go
					}
					trigger_event = gaming_go.8001
				}
				else_if = {
					limit = {
						local_var:gaming_type = gaming_type_wargame
					}
					trigger_event = gaming_wargame.8001
				}
			}
			# Losers
			else = {
				gamer_points_gain_effect = {
					CHANGE = 2
				}
				if = {
					limit = {
						local_var:gaming_type = gaming_type_chess
					}
					trigger_event = gaming_chess.8002
				}
				else_if = {
					limit = {
						local_var:gaming_type = gaming_type_go
					}
					trigger_event = gaming_go.8002
				}
				else_if = {
					limit = {
						local_var:gaming_type = gaming_type_wargame
					}
					trigger_event = gaming_wargame.8002
				}
			}
		}
	}
}
